{"version":3,"file":"static/js/778.1a8cf671.chunk.js","mappings":"+JAEA,MAAMA,EAAmBC,IAOlB,IAPmB,WACxBC,EAAU,QACVC,EAAO,SACPC,GAAW,EAAK,OAChBC,EAAS,GAAE,QACXC,GAAU,EAAK,GACfC,GACDN,EACC,OACEO,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,KAAK,QACLC,QAAQ,YACRJ,GAAI,IAAKA,EAAIK,gBAAiB,QAASC,aAAc,GACrDV,QAASA,EACTC,SAAUA,EACV,cAAaC,EACbC,QAASA,EAAQQ,SAEhBZ,GACa,C,6KCjBpB,MAAMa,EAA6Bd,IAAwB,IAAvB,cAAEe,GAAef,EACnD,OACEO,EAAAA,EAAAA,KAACS,EAAAA,EAAY,CACXC,UAAQ,EACRC,QAASC,EAAAA,GACTb,GAAI,CAAEc,MAAO,IAAKC,GAAI,EAAGC,GAAI,GAC7BC,YAAcC,IAAWjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,IAAKD,EAAQE,MAAM,eACtDC,SAAUA,CAACC,EAAGC,KACZd,EAAcc,EAAOC,KAAKC,GAAUA,EAAMA,QAAO,EAEnDC,qBAAsBA,CAACC,EAAQF,IAAUE,EAAOF,QAAUA,EAAMA,MAChE,cAAY,2BACZ,ECiCN,GAAeG,EAAAA,EAAAA,KAzCSC,KAEtB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MAkBrB,OAjBeD,EAASE,QAkBtB/B,EAAAA,EAAAA,KAAAgC,EAAAA,SAAA,CAAA1B,UACE2B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAC/B,QAAQ,WAAWJ,GAAI,CAAEoC,SAAU,IAAK9B,aAAc,GAAIC,SAAA,EAC9DN,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACrC,GAAI,CAAEsC,GAAI,GAAI/B,UACzBN,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CAACC,QAAQ,SAASxC,GAAI,CAAEyC,SAAU,IAAKlC,SAAC,mBAIrD2B,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CAAC1C,GAAI,CAAE2C,GAAI,EAAG3B,GAAI,EAAGsB,GAAI,GAAI/B,SAAA,EACvCN,EAAAA,EAAAA,KAACO,EAA0B,CAACC,cAdbmC,IACrBd,EAASc,WAAaA,CAAU,KAc1B3C,EAAAA,EAAAA,KAACR,EAAAA,EAAgB,CACfE,WAAW,cACXC,QA1BUiD,UAClB,MAAMC,QAAehB,EAASiB,cAE5BjB,EAASkB,iBADI,IAAXF,EACyB,+BAEC,GAAEA,EAAOG,aAEvCnB,EAASoB,cAAe,CAAI,EAoBpBpD,OAAO,wBAKb,IAAI,G","sources":["components/CardActionButton.js","components/DemoAutocompleteTransport.js","features/getWebAuthn.js"],"sourcesContent":["import { LoadingButton } from \"@mui/lab\";\n\nconst CardActionButton = ({\n  buttonText,\n  onClick,\n  disabled = false,\n  testId = \"\",\n  loading = false,\n  sx,\n}) => {\n  return (\n    <LoadingButton\n      size=\"small\"\n      variant=\"contained\"\n      sx={{ ...sx, backgroundColor: \"black\", borderRadius: 2 }}\n      onClick={onClick}\n      disabled={disabled}\n      data-testid={testId}\n      loading={loading}\n    >\n      {buttonText}\n    </LoadingButton>\n  );\n};\n\nexport { CardActionButton };\n","import { Autocomplete, TextField } from \"@mui/material\";\n\nimport { transportOptions } from \"../constants\";\n\nconst DemoAutocompleteTransports = ({ setTransports }) => {\n  return (\n    <Autocomplete\n      multiple\n      options={transportOptions}\n      sx={{ width: 288, py: 1, pr: 1 }}\n      renderInput={(params) => <TextField {...params} label=\"Transports\" />}\n      onChange={(_, values) => {\n        setTransports(values.map((value) => value.value));\n      }}\n      isOptionEqualToValue={(option, value) => option.value === value.value}\n      data-testid=\"autocomplete-transports\"\n    />\n  );\n};\n\nexport { DemoAutocompleteTransports };\n","import { observer } from \"mobx-react-lite\";\nimport { Card, CardContent, CardActions, Typography } from \"@mui/material\";\n\nimport { CardActionButton } from \"../components/CardActionButton\";\nimport { useStore } from \"../stores\";\nimport { DemoAutocompleteTransports } from \"../components/DemoAutocompleteTransport\";\n\n// card per feature\nconst GetWebAuthnCard = () => {\n  // mobx store\n  const { appStore } = useStore();\n  const isInit = appStore.isInit;\n\n  // feature logic\n  const getWebAuthn = async () => {\n    const result = await appStore.getWebAuthn();\n    if (result === true) {\n      appStore.snackBarMessage = \"Passkey signed successfully!\";\n    } else {\n      appStore.snackBarMessage = `${result.toString()}`;\n    }\n    appStore.openSnackBar = true;\n  };\n  const setTransports = (transports) => {\n    appStore.transports = transports;\n  };\n\n  // render logic\n  return isInit ? (\n    <>\n      <Card variant=\"outlined\" sx={{ minWidth: 275, borderRadius: 5 }}>\n        <CardContent sx={{ pb: 1 }}>\n          <Typography display=\"inline\" sx={{ fontSize: 26 }}>\n            Get Passkey\n          </Typography>\n        </CardContent>\n        <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n          <DemoAutocompleteTransports setTransports={setTransports} />\n          <CardActionButton\n            buttonText=\"Get Passkey\"\n            onClick={getWebAuthn}\n            testId=\"get-passkey\"\n          />\n        </CardActions>\n      </Card>\n    </>\n  ) : null;\n};\n\nexport default observer(GetWebAuthnCard);\n"],"names":["CardActionButton","_ref","buttonText","onClick","disabled","testId","loading","sx","_jsx","LoadingButton","size","variant","backgroundColor","borderRadius","children","DemoAutocompleteTransports","setTransports","Autocomplete","multiple","options","transportOptions","width","py","pr","renderInput","params","TextField","label","onChange","_","values","map","value","isOptionEqualToValue","option","observer","GetWebAuthnCard","appStore","useStore","isInit","_Fragment","_jsxs","Card","minWidth","CardContent","pb","Typography","display","fontSize","CardActions","pl","transports","async","result","getWebAuthn","snackBarMessage","toString","openSnackBar"],"sourceRoot":""}